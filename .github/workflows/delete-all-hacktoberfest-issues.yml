name: Delete ALL Hacktoberfest Issues (Open + Closed)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "DELETE-ALL-PERMANENTLY" to confirm permanent deletion of ALL (open + closed) Hacktoberfest issues'
        required: true
        type: string

jobs:
  delete-all-issues:
    name: Permanently delete ALL Hacktoberfest issues (open and closed)
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DELETE-ALL-PERMANENTLY" ]; then
            echo "‚ùå Confirmation failed. You must type 'DELETE-ALL-PERMANENTLY' to proceed."
            exit 1
          fi
          echo "‚úì Confirmation validated - proceeding with permanent deletion of ALL issues"

      - name: Delete ALL Hacktoberfest issues (open and closed)
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          echo "‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è  WARNING: This will PERMANENTLY DELETE ALL Hacktoberfest issues (BOTH OPEN AND CLOSED)"

          total_deleted=0

          # Process OPEN issues
          echo ""
          echo "========================================="
          echo "STEP 1: Fetching OPEN issues..."
          echo "========================================="

          open_issues=$(curl -sS -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/issues?state=open&labels=hacktoberfest&per_page=100")

          open_count=$(echo "$open_issues" | jq '. | length')
          echo "Found $open_count OPEN Hacktoberfest issues"

          if [ "$open_count" -gt 0 ]; then
            echo "$open_issues" | jq -r '.[].number' | while read -r issue_num; do
              issue_title=$(echo "$open_issues" | jq -r ".[] | select(.number == $issue_num) | .title")
              echo "üóëÔ∏è  Deleting OPEN issue #$issue_num: $issue_title"

              gh issue delete "$issue_num" --repo "$REPO" --yes

              if [ $? -eq 0 ]; then
                echo "‚úì Deleted OPEN issue #$issue_num"
              else
                echo "‚úó Failed to delete issue #$issue_num"
              fi
            done
          fi

          # Process CLOSED issues
          echo ""
          echo "========================================="
          echo "STEP 2: Fetching CLOSED issues..."
          echo "========================================="

          closed_issues=$(curl -sS -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/issues?state=closed&labels=hacktoberfest&per_page=100")

          closed_count=$(echo "$closed_issues" | jq '. | length')
          echo "Found $closed_count CLOSED Hacktoberfest issues"

          if [ "$closed_count" -gt 0 ]; then
            echo "$closed_issues" | jq -r '.[].number' | while read -r issue_num; do
              issue_title=$(echo "$closed_issues" | jq -r ".[] | select(.number == $issue_num) | .title")
              echo "üóëÔ∏è  Deleting CLOSED issue #$issue_num: $issue_title"

              gh issue delete "$issue_num" --repo "$REPO" --yes

              if [ $? -eq 0 ]; then
                echo "‚úì Deleted CLOSED issue #$issue_num"
              else
                echo "‚úó Failed to delete issue #$issue_num"
              fi
            done
          fi

          total_deleted=$((open_count + closed_count))

          echo ""
          echo "========================================="
          echo "DELETION SUMMARY"
          echo "========================================="
          echo "Open issues deleted: $open_count"
          echo "Closed issues deleted: $closed_count"
          echo "Total issues deleted: $total_deleted"
          echo ""
          echo "‚ö†Ô∏è  Note: Deleted issues cannot be recovered!"
